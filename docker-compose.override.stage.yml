#-----------------------------------------------------------------------------
# 🚀 Ejecutar en Stage (Ubuntu):
# docker-compose -f docker-compose.yml -f docker-compose.override.stage.yml up -d
#-----------------------------------------------------------------------------

services:
  # 🏗️ Odoo en modo Stage
  odoo:
    container_name: ${INSTANCE:-stage}-odoo
    ports:
      - "${ODOO_PORT:-8070}:8069"  # 📌 Odoo en puerto 8070 para Staging
    environment:
      - ODOO_ENV=staging  # 🏗️ Define el entorno como Staging
      - PGHOST=${PGHOST:-stage-postgres}  # 🐘 PostgreSQL en Staging
      - PGPORT=${PGPORT:-5432}  
      - PGUSER=${PGUSER:-odoo}  
      - PGPASSWORD=${PGPASSWORD:-staging_password}  
      - PGDATABASE=${PGDATABASE:-odoo_stage}  
      - SESSION_REDIS_HOST=${SESSION_REDIS_HOST:-stage-redis}  
      - SESSION_REDIS_PORT=${SESSION_REDIS_PORT:-6379}  
    networks:
      - odoo-network

  # 🐘 PostgreSQL en Stage
  postgres:
    env_file:
      - .env.stage
    container_name: ${INSTANCE:-stage}-postgres

  # 🔴 Redis en Stage
  redis:
    env_file:
      - .env.stage
    container_name: ${INSTANCE:-stage}-redis

  # 🌍 Nginx en Stage
  nginx:
    container_name: ${INSTANCE:-stage}-nginx
    restart: always
    profiles:
      - "stage"
    volumes:
      - ./config/nginx-stage.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"  # 📌 Maneja tráfico HTTP para Stage
