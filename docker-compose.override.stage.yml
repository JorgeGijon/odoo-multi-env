# üìå Configuraci√≥n espec√≠fica para el entorno de Staging
# Se ejecuta con:
# docker-compose -f docker-compose.yml -f docker-compose.override.stage.yml up -d --remove-orphans

services:
  odoo:
    container_name: stage-odoo
    ports:
      - "${ODOO_PORT:-8070}:8069"  # üìå Odoo en puerto 8070 para Staging
    environment:
      - INSTANCE=stage  # Para preprdoucci√≥n
      - ODOO_ENV=staging  # üèóÔ∏è Define el entorno como Staging
      - PGHOST=${PGHOST:-stage-postgres}  # üêò PostgreSQL en Staging
      - PGPORT=${PGPORT:-5432}  
      - PGUSER=${PGUSER:-odoo}  
      - PGPASSWORD=${PGPASSWORD:-staging_password}  
      - PGDATABASE=${PGDATABASE:-odoo_stage}  
      - SESSION_REDIS_HOST=${SESSION_REDIS_HOST:-stage-redis}  
      - SESSION_REDIS_PORT=${SESSION_REDIS_PORT:-6379}  
    networks:
      - odoo-network

  postgres:
    container_name: stage-postgres
    environment:
      - POSTGRES_USER=odoo
      - POSTGRES_PASSWORD=staging_password
      - POSTGRES_DB=odoo_stage
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - odoo-network

  redis:
    container_name: stage-redis
    environment:
      - REDIS_PASSWORD=
      - REDIS_MAXMEMORY=512mb
      - REDIS_MAXMEMORY_POLICY=allkeys-lru
    networks:
      - odoo-network

  nginx:
    container_name: stage-nginx
    ports:
      - "80:80"  # üìå Maneja tr√°fico HTTP para Staging
    volumes:
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - odoo
    networks:
      - odoo-network
