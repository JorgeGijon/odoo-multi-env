# 📌 Configuración específica para el entorno de Desarrollo
# Se ejecuta con:
# docker-compose -f docker-compose.yml -f docker-compose.override.dev.yml up -d --remove-orphans

services:
  odoo:
    container_name: dev-odoo
    environment:
      - ODOO_ENV=development  # 🔹 Es suficiente para que el entrypoint gestione todo lo demás 
    networks:
      - odoo-network

    # 🔹 **Activar DebugPy solo en Desarrollo**
    profiles:
      - "dev"
    volumes:
      - ./addons:/mnt/custom-addons                      # 🔌 Monta los módulos personalizados
      - ./odoo-src:/usr/lib/python3/dist-packages/odoo   # 🖥️ Acceso al código fuente de Odoo
      - ./data/odoo:/var/lib/odoo                        # 💾 Almacena datos persistentes de Odoo
    command: 
      - "python3" 
      - "-m" 
      - "debugpy" 
      - "--listen" 
      - "0.0.0.0:5678" 
      - "--wait-for-client" 
      - "/usr/bin/odoo"  # 🏗️ Odoo esperará la conexión del depurador antes de ejecutarse

  postgres:
    container_name: dev-postgres
    environment:
      - ODOO_ENV=development
    networks:
      - odoo-network

  redis:
    container_name: ${INSTANCE:-prueba}-redis
    image: redis:latest
    restart: unless-stopped
    environment:
      - REDIS_PORT=6380
      - REDIS_PASSWORD=
      - REDIS_MAXMEMORY=256mb
      - REDIS_MAXMEMORY_POLICY=noeviction
      - REDIS_APPENDONLY=no
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
    ports:
      - "6380:6379"  # 🔴 Expone Redis en otro puerto para pruebas
    networks:
      - odoo-network
