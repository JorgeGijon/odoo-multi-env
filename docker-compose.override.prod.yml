# üìå Configuraci√≥n espec√≠fica para el entorno de Producci√≥n
# Se ejecuta con:
# docker-compose -f docker-compose.yml -f docker-compose.override.prod.yml up -d --remove-orphans

services:
  odoo:
    container_name: prod-odoo
    ports:
      - "${ODOO_PORT:-8090}:8069"  # üìå Odoo en puerto 8090 para Producci√≥n
    environment:
      - ODOO_ENV=production  # üèóÔ∏è Define el entorno como Producci√≥n
      - PGHOST=${PGHOST:-prod-postgres}  # üêò PostgreSQL en Producci√≥n
      - PGPORT=${PGPORT:-5432}  
      - PGUSER=${PGUSER:-odoo}  
      - PGPASSWORD=${PGPASSWORD:-prod_password}  
      - PGDATABASE=${PGDATABASE:-odoo_prod}  
      - SESSION_REDIS_HOST=${SESSION_REDIS_HOST:-prod-redis}  
      - SESSION_REDIS_PORT=${SESSION_REDIS_PORT:-6379}  
      - WORKERS=4  # üöÄ Optimizaci√≥n para Producci√≥n
      - MAX_CRON_THREADS=2  
      - LIMIT_TIME_CPU=120  
      - LIMIT_TIME_REAL=300  
      - LIMIT_MEMORY_SOFT=2000000000  
      - LIMIT_MEMORY_HARD=2500000000  
      - PROXY_MODE=True  # üåç Habilita proxy para balanceadores de carga
      - DB_SSLMODE=require  # üîí Requiere SSL en PostgreSQL
      - DISABLE_SESSION_GC=True  # üöÄ Optimizaci√≥n de sesiones
    networks:
      - odoo-network

  postgres:
    container_name: prod-postgres
    environment:
      - POSTGRES_USER=odoo
      - POSTGRES_PASSWORD=prod_password
      - POSTGRES_DB=odoo_prod
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - odoo-network

  redis:
    container_name: prod-redis
    environment:
      - REDIS_PASSWORD=
      - REDIS_MAXMEMORY=512mb
      - REDIS_MAXMEMORY_POLICY=allkeys-lru
    networks:
      - odoo-network

  nginx:
    container_name: prod-nginx
    ports:
      - "80:80"   # üìå Maneja tr√°fico HTTP
      - "443:443" # üîí Maneja tr√°fico HTTPS
    volumes:
      - ./config/nginx.prod.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certs:/etc/nginx/certs:ro  # üìÇ Certificados SSL
    depends_on:
      - odoo
    networks:
      - odoo-network
