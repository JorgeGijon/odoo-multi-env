#!/bin/bash

# ðŸ“Œ Entrypoint para Odoo 18 con control de errores, seguridad y configuraciÃ³n dinÃ¡mica
# Este script gestiona la configuraciÃ³n de Odoo, espera a PostgreSQL y ejecuta Odoo de manera segura

set -e  # â›” Si ocurre un error, el script se detiene inmediatamente.
set -u  # ðŸ”’ Tratar variables no definidas como error.
set -o pipefail  # ðŸš€ Detectar fallos en comandos en tuberÃ­as (|).

echo "ðŸŸ¢ [INFO] Iniciando entrypoint de Odoo..."

echo "ðŸŸ¢ [INFO] Variables de entorno cargadas:"
echo "    ðŸ”¹ ODOO_ENV: ${ODOO_ENV:-undefined}"
echo "    ðŸ”¹ ODOO_PORT: ${ODOO_PORT:-8069}"
echo "    ðŸ”¹ PGHOST: ${PGHOST:-postgres}"
echo "    ðŸ”¹ PGPORT: ${PGPORT:-5432}"
echo "    ðŸ”¹ PGUSER: ${PGUSER:-odoo}"
echo "    ðŸ”¹ PGPASSWORD: ${PGPASSWORD:-NOT SET}"
echo "    ðŸ”¹ PGDATABASE: ${PGDATABASE:-odoo}"

echo "ðŸ”„ [INFO] Verificando conexiÃ³n con PostgreSQL en: $PGHOST:$PGPORT..."
until pg_isready -h "$PGHOST" -p "$PGPORT" -U "$PGUSER"; do
  echo "ðŸ”„ [INFO] PostgreSQL aÃºn no estÃ¡ listo, esperando 5 segundos..."
  sleep 5
done
echo "âœ… [INFO] PostgreSQL estÃ¡ disponible."

# ðŸ“œ **GENERAR ARCHIVO DE CONFIGURACIÃ“N PARA ODOO**
CONFIG_FILE="/config/odoo.conf"
cat <<EOF > "$CONFIG_FILE"
[options]
db_host = $PGHOST
db_port = $PGPORT
db_name = $PGDATABASE
db_user = $PGUSER
db_password = $PGPASSWORD
http_port = $ODOO_PORT
EOF
echo "âœ… [INFO] ConfiguraciÃ³n base generada en: $CONFIG_FILE"

# ðŸš€ **EJECUTAR ODOO**
echo "ðŸš€ [INFO] Iniciando Odoo con configuraciÃ³n: $CONFIG_FILE"
exec odoo --config "$CONFIG_FILE"
